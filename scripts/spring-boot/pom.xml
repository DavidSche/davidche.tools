<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>myservice</artifactId>
    <version>0.0.8-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>demo</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <dockerfile-maven-version>1.4.13</dockerfile-maven-version>
        <docker.image.prefix>192.168.9.10:5000</docker.image.prefix>
        <checkstyle.latest.version>8.32</checkstyle.latest.version>
        <checkstyle.maven.plugin.version>3.0.0</checkstyle.maven.plugin.version>
        <spotbugs.maven.plugin.version>3.1.11</spotbugs.maven.plugin.version>
        <findsecbug.maven.plugin.version>1.9.0</findsecbug.maven.plugin.version>
        <fb-contrib.maven.plugin.version>7.4.3.sb</fb-contrib.maven.plugin.version>
        <org.mapstruct.version>1.3.0.Final</org.mapstruct.version>
        <springfox-swagger2.version>2.9.2</springfox-swagger2.version>
        <springfox-swagger-ui.version>2.9.2</springfox-swagger-ui.version>
        <docker.args.random>-Djava.security.egd=file:/dev/./urandom</docker.args.random>
        <docker.args.spring.config>-Dspring.config.additional-location=file:/opt/spring-config/app.properties</docker.args.spring.config>
        <!--		<docker.args.spring.config>-Dspring.config.additional-location=file:/opt/config/config.yaml,file:/opt/secret/secret.yaml</docker.args.spring.config>-->
        <lombok.version>1.16.12</lombok.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>4.9</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--maven.plugins-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- check style plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.maven.plugin.version}</version>
                <configuration>
                    <configLocation>${basedir}/src/main/resources/config/checkstyle/checkstyle.xml</configLocation>
                    <!--  <suppressionsLocation>src/main/resources/config/checkstyle/suppression.xml</suppressionsLocation> -->
                </configuration>
            </plugin>
            <!--			<plugin>-->
            <!--				<groupId>org.apache.maven.plugins</groupId>-->
            <!--				<artifactId>maven-checkstyle-plugin</artifactId>-->
            <!--				<version>${checkstyle.maven.plugin.version}</version>-->
            <!--				<dependencies>-->
            <!--					<dependency>-->
            <!--						<groupId>com.puppycrawl.tools</groupId>-->
            <!--						<artifactId>checkstyle</artifactId>-->
            <!--						<version>${checkstyle.latest.version}</version>-->
            <!--					</dependency>-->
            <!--				</dependencies>-->
            <!--				<executions>-->
            <!--					<execution>-->
            <!--						<id>validate</id>-->
            <!--						<phase>validate</phase>-->
            <!--						<configuration>-->
            <!--							<configLocation>${basedir}/src/main/resources/config/checkstyle/checkstyle.xml</configLocation>-->
            <!--							<encoding>UTF-8</encoding>-->
            <!--							<consoleOutput>true</consoleOutput>-->
            <!--							<failsOnError>true</failsOnError>-->
            <!--							<violationSeverity>warning</violationSeverity>-->
            <!--							<failOnViolation>true</failOnViolation>-->
            <!--							<includeTestSourceDirectory>true</includeTestSourceDirectory>-->
            <!--						</configuration>-->
            <!--						<goals>-->
            <!--							<goal>check</goal>-->
            <!--						</goals>-->
            <!--					</execution>-->
            <!--				</executions>-->
            <!--			</plugin>-->

            <!--Maven Dockerfile plugin-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-version}</version>
                <!-- Uncomment the section below to build the docker image with mvn package and and push it with mvn deploy-->
                <!--<executions>-->
                <!--<execution>-->
                <!--&lt;!&ndash;<id>defaultdefault</id>&ndash;&gt;-->
                <!--<id>builddocker</id>-->
                <!--<goals>-->
                <!--<goal>build</goal>-->
                <!--<goal>push</goal>-->
                <!--</goals>-->
                <!--</execution>-->
                <!--</executions>-->
                <configuration>
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                        <!--<repository>/${project.artifactId}</repository>-->
                        <!--<imageName>itmuch/microservice-discovery-eureka:0.0.2</imageName>-->
                    </buildArgs>
                </configuration>
            </plugin>
            <!--Jib plugin -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>2.2.0</version>
                <configuration>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                    <from>
                        <image>192.168.9.10:5000/myjdk:11</image>
                        <!--      192.168.9.10:5000/openjdk:8u171-alpine    <credHelper></credHelper> -->
                    </from>
                    <to>
                        <image>${docker.image.prefix}/${project.artifactId}:${project.version}</image>
                    </to>
                    <container>
                        <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        <!--						<args>-->
                        <!--							<arg>An argument.</arg>-->
                        <!--						</args>-->
                        <!--						<mainClass>com.test.HelloWorld</mainClass>-->
                        <!--						<extraClasspath><path>/other</path></extraClasspath>-->
                        <jvmFlags>
                            <jvmFlag>-Xms256m</jvmFlag>
                            <jvmFlag>-Xdebug</jvmFlag>
                            <jvmFlag>${docker.args.random}</jvmFlag>
                            <jvmFlag>${docker.args.spring.config}</jvmFlag>
                        </jvmFlags>
                        <environment>
                            <TZ>Asia/Shanghai</TZ>
                            <!--							<env2>envvalue2</env2>-->
                        </environment>
                        <ports>
                            <port>8080</port>
                        </ports>
                    </container>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>

            </plugin>

        </plugins>
    </build>

</project>