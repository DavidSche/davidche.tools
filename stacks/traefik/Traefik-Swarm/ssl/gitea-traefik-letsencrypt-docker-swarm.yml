# Gitea with Let's Encrypt in a Docker Swarm

# Vladimir Mikhalev
# callvaldemar@gmail.com
# www.heyvaldemar.com

# Configure Traefik and create secrets for storing the passwords on the Docker Swarm manager node before applying the configuration.
# Traefik configuration: https://github.com/heyValdemar/traefik-letsencrypt-docker-swarm

# Run gitea-restore-application-data.sh on the Docker Swarm worker node where the container for backups is running to restore application data if needed.
# Run gitea-restore-database.sh on the Docker Swarm node where the container for backups is running to restore database if needed.
# Run docker stack ps gitea | grep gitea_backups | awk 'NR > 0 {print $4}' on the Docker Swarm manager node to find on which node container for backups is running.

# Deploy Gitea in a Docker Swarm using the command:
# docker stack deploy -c gitea-traefik-letsencrypt-docker-swarm.yml gitea

version: '3.8'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "10m"

networks:
  gitea-network:
    driver: overlay
  traefik-network:
    external: true

volumes:
  gitea-data:
  gitea-config:
  gitea-postgres:
  gitea-data-backups:
  gitea-postgres-backups:

services:
  postgres:
    <<: *default-opts
    # Image tag (replace with yours)
    image: postgres:14
    volumes:
      - gitea-postgres:/var/lib/postgresql/data
    environment:
      # Database name (replace with yours)
      POSTGRES_DB: giteadb
      # Database user (replace with yours)
      POSTGRES_USER: giteadbuser
      # Database password (replace with yours)
      POSTGRES_PASSWORD: etFneCEtAWRKkfeQmkvwLWE
    networks:
      - gitea-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '0.55'
          memory: 1G
        reservations:
          cpus: '0.35'
          memory: 512M

  gitea:
    <<: *default-opts
    image: gitea/gitea:1.17
    volumes:
      - gitea-data:/data
      - gitea-config:/etc/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      DB_TYPE: postgres
      DB_HOST: postgres:5432
      # Database name (replace with yours)
      DB_NAME: giteadb
      # Database user (replace with yours)
      DB_USER: giteadbuser
      # Database password (replace with yours)
      DB_PASSWD: etFneCEtAWRKkfeQmkvwLWE
      RUN_MODE: prod
      SSH_PORT: 0
      DISABLE_SSH: 'true'
      HTTP_PORT: 3000
      # Gitea URL (replace with yours)
      ROOT_URL: https://gitea.heyvaldemar.net
    networks:
      - gitea-network
      - traefik-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '1.55'
          memory: 1G
        reservations:
          cpus: '0.35'
          memory: 512M
      labels:
        - "traefik.enable=true"
        # Gitea URL (replace with yours)
        - "traefik.http.routers.gitea.rule=Host(`gitea.heyvaldemar.net`)"
        - "traefik.http.routers.gitea.service=gitea"
        - "traefik.http.routers.gitea.entrypoints=websecure"
        - "traefik.http.services.gitea.loadbalancer.server.port=3000"
        - "traefik.http.routers.gitea.tls=true"
        - "traefik.http.routers.gitea.tls.certresolver=letsencrypt"
        - "traefik.http.services.gitea.loadbalancer.passhostheader=true"
        - "traefik.http.routers.gitea.middlewares=compresstraefik"
        - "traefik.http.middlewares.compresstraefik.compress=true"
    depends_on:
      - postgres

  backups:
    <<: *default-opts
    # Image tag (replace with yours)
    image: postgres:14
    # Database backups prune interval (replace with yours). Default is 7 days.
    # find /srv/gitea-postgres/backups -type f -mtime +7 | xargs rm -f

    # Application data backups prune interval (replace with yours). Default is 7 days.
    # find /srv/gitea-application-data/backups -type f -mtime +7 | xargs rm -f

    # Gitea backups interval (replace with yours). Default is 1 day.
    # sleep 24h

    # Run gitea-restore-application-data.sh to restore application data if needed.
    # Run gitea-restore-database.sh to restore database if needed.
    command: sh -c 'sleep 30m
             && while true; do
             PGPASSWORD="$$(echo $$POSTGRES_PASSWORD)"
             pg_dump
             -h postgres
             -p 5432
             -d giteadb
             -U giteadbuser | gzip > /srv/gitea-postgres/backups/gitea-postgres-backup-$$(date "+%Y-%m-%d_%H-%M").gz
             && tar -zcpf /srv/gitea-application-data/backups/gitea-application-data-backup-$$(date "+%Y-%m-%d_%H-%M").tar.gz /etc/gitea
             && find /srv/gitea-postgres/backups -type f -mtime +7 | xargs rm -f
             && find /srv/gitea-application-data/backups -type f -mtime +7 | xargs rm -f;
             sleep 24h; done'
    volumes:
      - gitea-data:/etc/gitea
      # Application data backups location
      - gitea-data-backups:/srv/gitea-application-data/backups
      # Database backups location
      - gitea-postgres-backups:/srv/gitea-postgres/backups
    environment:
      POSTGRES_PASSWORD: etFneCEtAWRKkfeQmkvwLWE
    networks:
      - gitea-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '0.55'
          memory: 1G
        reservations:
          cpus: '0.35'
          memory: 512M
    depends_on:
      - postgres
      - gitea
