version: '3.6'
#  https://github.com/bitnami/bitnami-docker-kafka

services:
  zookeeper:
    image: 'bitnami/zookeeper:3'
    ports:
     - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      mode: replicated
      replicas: 1
      placement:
        # constraints: [node.labels.pm-node == true]  # 部署标签约束
        constraints: [node.labels.kafka == true]  # 部署标签约束
        
  kafka:
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - 'kafka_data:/bitnami'
    depends_on:
      - zookeeper
    deploy:
      mode: replicated
      replicas: 1
      placement:
        # constraints: [node.labels.pm-node == true]  # 部署标签约束
        constraints: [node.labels.kafka == true]  # 部署标签约束

  connect:
    image: confluentinc/cp-kafka-connect:latest
    ports:
      - 8083:8083
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - connect-plugins:/connect-plugins
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "connect"
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_PLUGIN_PATH: /connect-plugins
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-3.3.0.jar
    deploy:
      mode: replicated
      replicas: 1
      placement:
        # constraints: [node.labels.pm-node == true]  # 部署标签约束
        constraints: [node.labels.kafka == true]  # 部署标签约束
# 2.0.0.2
  kafkamanager:
    image: kafkamanager/kafka-manager:latest
    ports:
      - 7100:9000
    depends_on:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper
    deploy:
      mode: replicated
      replicas: 1
      placement:
        # constraints: [node.labels.pm-node == true]  # 部署标签约束
        constraints: [node.labels.kafka == true]  # 部署标签约束

volumes:
  kafka_data:
    driver: local
  connect-plugins:
    driver: local  
    