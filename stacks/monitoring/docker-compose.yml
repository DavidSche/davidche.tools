version: '3.2'

networks:
  frontend:
    external:
      name: swarm-proxy-net 
  backend: 
  

services:

  ################################################################
  # Prometheus 
  #  - runs on manager node
  ################################################################
  prometheus:
    image: prom/prometheus
    volumes:
      - $PWD/management/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    deploy:
      labels:
        #traefik.port: "9090"
        #traefik.frontend.rule: "Host:prometheus.myhost.com"
        # traefik.frontend.auth.basic.usersFile: /path/.htpasswd   
        #traefik.frontend.auth.basic.users: "admin:$$axxxxxxxxxxxxxxxxxxxxxxxxx"
        #traefik.docker.network: "imixs-proxy-net" 
      placement:
        constraints:
          - node.role == manager
    networks:
      - frontend
      - backend     


  ################################################################
  # The promethes node-exporter 
  # For each node a separte service need to be added 
  ################################################################
  # START NODE-EXPORTERS.....
  manager-001:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    deploy:
      placement:
        constraints:
         # Hostname of the manager node!
         - node.hostname == manager-001
    networks:
      - backend

  worker-001:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    deploy:
      placement:
        constraints:
         # Hostname of the first woker node!
         - node.hostname == worker-001
    networks:
      - backend
  ################################################################
  # END NODE-EXPORTERS.....
  ################################################################
      
      



  ################################################################
  # cAdvisor
  #   - runs on every node
  ################################################################
  # START CADVISORS.....
  docker-manager-001:
    image: google/cadvisor:latest
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      placement:
        constraints:
         # Hostname of the first manager node!
          - node.hostname == manager-001
    networks:
      - backend

  docker-worker-001:
    image: google/cadvisor:latest
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      placement:
        constraints:
         # Hostname of the first woker node!
          - node.hostname == worker-001
    networks:
      - backend

  ################################################################
  # END CADVISORS.....
  ################################################################

     
  ################################################################
  # Grafana
  #  - runs on manager node
  ################################################################
  grafana:
    image: grafana/grafana
    #environment:
    #  GF_SMTP_ENABLED: "true"
    #  GF_SMTP_HOST: "mailgateway:25"
    #  GF_SMTP_FROM_ADDRESS: "alert@myhost.com"
    volumes: 
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    deploy:
#      labels:
#        traefik.port: "3000"
#        traefik.frontend.rule: "Host:grafana.myhost.com"
#        traefik.docker.network: "imixs-proxy-net" 
      placement:
        constraints:
          - node.role == manager
    networks:
      - frontend
      - backend



volumes:
  grafana-data:



