# docker stack deploy -c stack-app.yml app --with-registry-auth --prune
version: "3.7"
networks:
  app:
    driver: overlay
    name: app
    attachable: true
    driver_opts:
      encrypted: "true"
  proxy: 
    external: true

services:
  backend:
    image: jakubhajek/nodejs-backend:latest
    healthcheck: 
      test: wget --quiet --tries=1 --spider http://localhost:3000/ || exit 1
      interval: 1s
      timeout: 5s
      retries: 1
      start_period: 5s
    networks:
      - app
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        failure_action: rollback
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 64M

  frontend:
    image: nginx:1.17-alpine
    healthcheck: 
      test: wget --quiet --tries=1 --spider http://localhost:80/ || exit 1
      interval: 1s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - app
      - proxy
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        failure_action: rollback
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      labels:
        - traefik.enable=true
        - traefik.backend=nginx-frontend
        - traefik.docker.network=proxy
        - traefik.port=80
        - traefik.docker.tags=${TRAEFIK_PUBLIC_TAG:-nginx-frontend}
        - traefik.frontend.rule=Host:node-app.${DOMAIN:-labs.cometari.eu}
        - traefik.backend.healthcheck.path=/healthcheck
        - traefik.backend.healthcheck.interval=1s
      resources:
        limits:
          memory: 64MB

configs:
  nginx_config:
    name: nginx-config-${NGINX_CONFIG:-1}
    file: nginx.conf
