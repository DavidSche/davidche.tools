version: "3.7"

services:
  traefik:
    image: traefik:1.7.14
    ports:
      - 80:80
    labels:
      - traefik.frontend.rule=Host:traefik.${DOMAIN:-localhost}
      - traefik.enable=true
      - traefik.port=8080
      - traefik.tags=public
      - traefik.docker.network=public
      - traefik.redirectorservice.frontend.entryPoints=http
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      --docker
      --docker.watch
      --docker.exposedbydefault=false
      --entrypoints='Name:http Address::80'
      --logLevel=INFO
      --accessLog
      --api
      --metrics
      --metrics.prometheus
    networks:
      - public
      - private
  gitea:
    image: gitea/gitea:latest
    ports:
      - 3000:3000
    environment:
      - APP_NAME=Gitea
      - USER_UID=1000
      - USER_GID=1000
      - ROOT_URL=http://gitea:3000
      - SSH_DOMAIN=gitea
      - SSH_PORT=2222
      - HTTP_PORT=3000
      - DB_TYPE=postgres
      - DB_HOST=gitea-db:5432
      - DB_NAME=gitea
      - DB_USER=postgres
      - DB_PASSWD=postgres
    volumes:
      - gitea_app:/data
    ports:
      - 2222:2222
    networks:
      - public
      - private
    labels:
      - "traefik.docker.network=public"
      - "traefik.port=3000"
      - "traefik.backend=gitea"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:gitea"
      - "traefik.frontend.entryPoints=http"

  gitea-db:
    image: postgres:alpine
    volumes:
      - gitea_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gitea
    networks:
      - private

  drone-server:
    image: drone/drone:1.2.1
    volumes:
      - drone:/var/lib/drone
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_DEBUG=true
      - DRONE_ADMIN=rbekker87
      - DRONE_USER_CREATE=username:rbekker87,admin:true
      - DRONE_SERVER_PORT=:80
      - DRONE_DATABASE_DRIVER=sqlite3
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_GITEA_SERVER=http://gitea:3000
      - DRONE_RPC_SECRET=9c3921e3e748aff725d2e16ef31fbc42
      - DRONE_SERVER_HOST=drone-server:80
      - DRONE_HOST=http://drone-server:80
      - DRONE_SERVER_PROTO=http
      - DRONE_TLS_AUTOCERT=false
      - DRONE_AGENTS_ENABLED=true
      # minio: need to create bucket first
      - DRONE_S3_ENDPOINT=http://minio:9000
      - DRONE_S3_BUCKET=drone
      - DRONE_S3_SKIP_VERIFY=true
      - DRONE_S3_PATH_STYLE=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_COLOR=true
      - AWS_ACCESS_KEY_ID=foo1234567
      - AWS_SECRET_ACCESS_KEY=bar1234567
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_REGION=us-east-1
    networks:
      - public
      - private
    labels:
      - "traefik.docker.network=public"
      - "traefik.port=80"
      - "traefik.backend=drone-server"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:drone"
      - "traefik.frontend.entryPoints=http"
    depends_on:
      - traefik
      - gitea-db
  drone-agent:
    image: drone/agent:1.2.1
    command: agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_SERVER=http://drone-server:80
      - DRONE_RPC_SECRET=9c3921e3e748aff725d2e16ef31fbc42
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NETWORKS=private
    networks:
      - private
      - public
    depends_on:
      - drone-server

  minio:
    image: minio/minio:RELEASE.2019-03-27T22-35-21Z
    container_name: minio
    volumes:
      - minio:/data
    ports:
      - "8003:9000"
    environment:
      - MINIO_ACCESS_KEY=foo1234567
      - MINIO_SECRET_KEY=bar1234567
    command: server /data
    labels:
      - "traefik.docker.network=public"
      - "traefik.port=9000"
      - "traefik.backend=minio"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:minio"
      - "traefik.frontend.entryPoints=http"
    networks:
      - public
      - private

volumes:
  gitea_app: {}
  gitea_db: {}
  drone: {}
  minio: {}

networks:
  public:
    name: public
  private:
    name: private
